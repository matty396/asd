{
  "_args": [
    [
      {
        "raw": "anymatch@~3.1.2",
        "scope": null,
        "escapedName": "anymatch",
        "name": "anymatch",
        "rawSpec": "~3.1.2",
        "spec": ">=3.1.2 <3.2.0",
        "type": "range"
      },
      "E:\\workspace_laravel\\control-stock\\node_modules\\chokidar"
    ]
  ],
  "_from": "anymatch@~3.1.2",
  "_hasShrinkwrap": false,
  "_id": "anymatch@3.1.3",
  "_location": "/anymatch",
  "_nodeVersion": "16.14.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/anymatch_3.1.3_1669054897424_0.28372944178346304"
  },
  "_npmUser": {
    "name": "phated",
    "email": "blaine.bublitz@gmail.com"
  },
  "_npmVersion": "8.11.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "anymatch@~3.1.2",
    "scope": null,
    "escapedName": "anymatch",
    "name": "anymatch",
    "rawSpec": "~3.1.2",
    "spec": ">=3.1.2 <3.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/chokidar"
  ],
  "_resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
  "_shasum": "790c58b19ba1720a84205b57c618d5ad8524973e",
  "_shrinkwrap": null,
  "_spec": "anymatch@~3.1.2",
  "_where": "E:\\workspace_laravel\\control-stock\\node_modules\\chokidar",
  "author": {
    "name": "Elan Shanker",
    "url": "https://github.com/es128"
  },
  "bugs": {
    "url": "https://github.com/micromatch/anymatch/issues"
  },
  "dependencies": {
    "normalize-path": "^3.0.0",
    "picomatch": "^2.0.4"
  },
  "description": "Matches strings against configurable strings, globs, regular expressions, and/or functions",
  "devDependencies": {
    "mocha": "^6.1.3",
    "nyc": "^14.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
    "shasum": "790c58b19ba1720a84205b57c618d5ad8524973e",
    "tarball": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
    "fileCount": 5,
    "unpackedSize": 9654,
    "signatures": [
      {
        "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
        "sig": "MEUCIQCb/AbEWxEB0qqOSnPkeWgpv5RGNzN2jbYAbN6bT4n6BAIgJDTSn9WVoppKMohO7pEEOa1eCduipQ3FOe8OsWJPa1M="
      }
    ],
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJje8GxACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmoixw/7BaWCNmw3H7ScsUAv7j5Btl3Wg6s0U/5fPxHwBvEs6rYiZi3G\r\nF2WhPTWMB4aioZ8ZX3N6gVrANlHDEnGPs7UhNCGvc/Pej8iwLtpOEgoi/vlQ\r\nxucB2FPnCIFb2avPfaM4xJa2oMpBaV2zBnaIQ2yzV5mWceZs/587gccxqW+t\r\ntWOyU3ftD8TXz9OYfEiVFhbByItor8e7s6jG6KFrOqALimF3sleYV2Ze1zVF\r\nrwhN5jipf4p4ZQQ6Db+m9bP5VXyWLXQOBqvA8fEDMz6ZIpzFusDgCLSP77QS\r\nuxw+bTgSMFt199VObbiRXSEGT4R4rCivXd0FrQWfcuE9APhGvq6xQYDv+XsV\r\nH1Zd4t+SM5xxvEjWGtg+EpEmDjsaTYDMHSUvowOUlgc2x3HuhluTDwKqnbGF\r\nWF14U3k6U7pBfQFhFHokp1c+xfgiID79+7muPZ+OS9v/dzkaiCTAD3sEXXLa\r\nBHiQ4Ek2IKSxhhIweWQzaRkz7Fk4MhqF0pXoJVa+zv4De/X1+xF5udl0QVUL\r\nSO9vO7SLcJtpz59ZvubiB9TErqmqkvUmyfIRQyu8LNcKDrfoSpQybfIFOZLY\r\nDdeco7mDlsytKJQWiPitXmTeoH+uEtjLKR1or14GqMnDyE8iiHl4bBLUQNDu\r\ngWy4MpvD3/FSZdpIgzYmf00lis6zdROYO3A=\r\n=AdxG\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 8"
  },
  "files": [
    "index.js",
    "index.d.ts"
  ],
  "gitHead": "cbd278e43710eaf325d2061fa11aefd127c509be",
  "homepage": "https://github.com/micromatch/anymatch",
  "keywords": [
    "match",
    "any",
    "string",
    "file",
    "fs",
    "list",
    "glob",
    "regex",
    "regexp",
    "regular",
    "expression",
    "function"
  ],
  "license": "ISC",
  "maintainers": [
    {
      "name": "es128",
      "email": "elan.shanker+npm@gmail.com"
    },
    {
      "name": "phated",
      "email": "blaine.bublitz@gmail.com"
    },
    {
      "name": "paulmillr",
      "email": "paul@paulmillr.com"
    },
    {
      "name": "jonschlinkert",
      "email": "github@sellside.com"
    },
    {
      "name": "doowb",
      "email": "brian.woodward@gmail.com"
    }
  ],
  "name": "anymatch",
  "optionalDependencies": {},
  "readme": "anymatch [![Build Status](https://travis-ci.org/micromatch/anymatch.svg?branch=master)](https://travis-ci.org/micromatch/anymatch) [![Coverage Status](https://img.shields.io/coveralls/micromatch/anymatch.svg?branch=master)](https://coveralls.io/r/micromatch/anymatch?branch=master)\n======\nJavascript module to match a string against a regular expression, glob, string,\nor function that takes the string as an argument and returns a truthy or falsy\nvalue. The matcher can also be an array of any or all of these. Useful for\nallowing a very flexible user-defined config to define things like file paths.\n\n__Note: This module has Bash-parity, please be aware that Windows-style backslashes are not supported as separators. See https://github.com/micromatch/micromatch#backslashes for more information.__\n\n\nUsage\n-----\n```sh\nnpm install anymatch\n```\n\n#### anymatch(matchers, testString, [returnIndex], [options])\n* __matchers__: (_Array|String|RegExp|Function_)\nString to be directly matched, string with glob patterns, regular expression\ntest, function that takes the testString as an argument and returns a truthy\nvalue if it should be matched, or an array of any number and mix of these types.\n* __testString__: (_String|Array_) The string to test against the matchers. If\npassed as an array, the first element of the array will be used as the\n`testString` for non-function matchers, while the entire array will be applied\nas the arguments for function matchers.\n* __options__: (_Object_ [optional]_) Any of the [picomatch](https://github.com/micromatch/picomatch#options) options.\n    * __returnIndex__: (_Boolean [optional]_) If true, return the array index of\nthe first matcher that that testString matched, or -1 if no match, instead of a\nboolean result.\n\n```js\nconst anymatch = require('anymatch');\n\nconst matchers = [ 'path/to/file.js', 'path/anyjs/**/*.js', /foo.js$/, string => string.includes('bar') && string.length > 10 ] ;\n\nanymatch(matchers, 'path/to/file.js'); // true\nanymatch(matchers, 'path/anyjs/baz.js'); // true\nanymatch(matchers, 'path/to/foo.js'); // true\nanymatch(matchers, 'path/to/bar.js'); // true\nanymatch(matchers, 'bar.js'); // false\n\n// returnIndex = true\nanymatch(matchers, 'foo.js', {returnIndex: true}); // 2\nanymatch(matchers, 'path/anyjs/foo.js', {returnIndex: true}); // 1\n\n// any picomatc\n\n// using globs to match directories and their children\nanymatch('node_modules', 'node_modules'); // true\nanymatch('node_modules', 'node_modules/somelib/index.js'); // false\nanymatch('node_modules/**', 'node_modules/somelib/index.js'); // true\nanymatch('node_modules/**', '/absolute/path/to/node_modules/somelib/index.js'); // false\nanymatch('**/node_modules/**', '/absolute/path/to/node_modules/somelib/index.js'); // true\n\nconst matcher = anymatch(matchers);\n['foo.js', 'bar.js'].filter(matcher);  // [ 'foo.js' ]\nanymatch master* ‚ùØ\n\n```\n\n#### anymatch(matchers)\nYou can also pass in only your matcher(s) to get a curried function that has\nalready been bound to the provided matching criteria. This can be used as an\n`Array#filter` callback.\n\n```js\nvar matcher = anymatch(matchers);\n\nmatcher('path/to/file.js'); // true\nmatcher('path/anyjs/baz.js', true); // 1\n\n['foo.js', 'bar.js'].filter(matcher); // ['foo.js']\n```\n\nChangelog\n----------\n[See release notes page on GitHub](https://github.com/micromatch/anymatch/releases)\n\n- **v3.0:** Removed `startIndex` and `endIndex` arguments. Node 8.x-only.\n- **v2.0:** [micromatch](https://github.com/jonschlinkert/micromatch) moves away from minimatch-parity and inline with Bash. This includes handling backslashes differently (see https://github.com/micromatch/micromatch#backslashes for more information).\n- **v1.2:** anymatch uses [micromatch](https://github.com/jonschlinkert/micromatch)\nfor glob pattern matching. Issues with glob pattern matching should be\nreported directly to the [micromatch issue tracker](https://github.com/jonschlinkert/micromatch/issues).\n\nLicense\n-------\n[ISC](https://raw.github.com/micromatch/anymatch/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/micromatch/anymatch.git"
  },
  "scripts": {
    "mocha": "mocha",
    "test": "nyc mocha"
  },
  "types": "./index.d.ts",
  "version": "3.1.3"
}
