{
  "_args": [
    [
      {
        "raw": "mime-types@^2.1.12",
        "scope": null,
        "escapedName": "mime-types",
        "name": "mime-types",
        "rawSpec": "^2.1.12",
        "spec": ">=2.1.12 <3.0.0",
        "type": "range"
      },
      "E:\\workspace_laravel\\control-stock\\node_modules\\form-data"
    ]
  ],
  "_from": "mime-types@^2.1.12",
  "_hasShrinkwrap": false,
  "_id": "mime-types@2.1.35",
  "_location": "/mime-types",
  "_nodeVersion": "16.14.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/mime-types_2.1.35_1647108282894_0.3187771888128905"
  },
  "_npmUser": {
    "name": "dougwilson",
    "email": "doug@somethingdoug.com"
  },
  "_npmVersion": "8.3.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mime-types@^2.1.12",
    "scope": null,
    "escapedName": "mime-types",
    "name": "mime-types",
    "rawSpec": "^2.1.12",
    "spec": ">=2.1.12 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/form-data"
  ],
  "_resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
  "_shasum": "381a871b62a734450660ae3deee44813f70d959a",
  "_shrinkwrap": null,
  "_spec": "mime-types@^2.1.12",
  "_where": "E:\\workspace_laravel\\control-stock\\node_modules\\form-data",
  "bugs": {
    "url": "https://github.com/jshttp/mime-types/issues"
  },
  "contributors": [
    {
      "name": "Douglas Christopher Wilson",
      "email": "doug@somethingdoug.com"
    },
    {
      "name": "Jeremiah Senkpiel",
      "email": "fishrock123@rocketmail.com",
      "url": "https://searchbeam.jit.su"
    },
    {
      "name": "Jonathan Ong",
      "email": "me@jongleberry.com",
      "url": "http://jongleberry.com"
    }
  ],
  "dependencies": {
    "mime-db": "1.52.0"
  },
  "description": "The ultimate javascript content-type utility.",
  "devDependencies": {
    "eslint": "7.32.0",
    "eslint-config-standard": "14.1.1",
    "eslint-plugin-import": "2.25.4",
    "eslint-plugin-markdown": "2.2.1",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-promise": "5.2.0",
    "eslint-plugin-standard": "4.1.0",
    "mocha": "9.2.2",
    "nyc": "15.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
    "shasum": "381a871b62a734450660ae3deee44813f70d959a",
    "tarball": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
    "fileCount": 5,
    "unpackedSize": 18272,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiLOC7ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpT2w/9GeLyJAyqEq3ZT7nLLZUi4oEEIcrEj7wz8UgiRjyOJPFHZBFG\r\nBJltzgFWbOf62sJvn1ZekIt6kq2OecNFdVjLe1sRHUfE+Irf8Z3oCT9RAwZ8\r\n2JYz8jP7VQ1p6ZsK8gQ43Bc8sBlZB81coPyjCkmwGc8yNy1amT1LMVMU8PRd\r\nuxfMoN0vEis3nARzPlx9fb7KKqS7rFL1zAaSUKhDLomS/gNOLsLtjyrlQo02\r\nvxX43VLGJvK2Wpd7TD/qvGvdGQ5VSm++TUfW3tviXQHwP4Meiy8zU09+OYXO\r\n0+ij2TlSLls7zNoQOWiZgHJYUP0WAZW4doxm9Sk9hA5RLGn3ukgMydYjyq66\r\nZJUCpYr8p2Y+1LcUHEdmgwfqsUdhX55IwyH8DwvlPHf619eZz7dM9aOWtBHS\r\nYAXUuzdJFlem2ezr1FhH1y7A/yPyXr2pqyzx9Qxp/d2yuaSVU82KCa9l7oJI\r\nnV8lubKUFxlJgIbFjkoxmvnDt9q0+MTzntrznHIcuD2wgRRKuk5Ima5udd0o\r\nSy/mLV7inWSaq9dWWzdZpYZDwGve4tcMr8LNlweZ80H2SFWjJdkBhf22i2Gr\r\nKgwvndofh9GfV2hnBFqL6MT/nJDm67lHf/Q/9frsfArA9Pb2OhapTzHthg08\r\nnNpZRTFrJfHM03pS8bEc33gaAQupl0vL+Fw=\r\n=eKhF\r\n-----END PGP SIGNATURE-----\r\n",
    "signatures": [
      {
        "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
        "sig": "MEQCIE0POPFsQ1njxVBqIqEP9T3OT48luQI5vMvaem7SelGFAiAqt9YWLmp/N3wfzUGgSr+0ZPqGVYT9H644ZN7yqpytxQ=="
      }
    ]
  },
  "engines": {
    "node": ">= 0.6"
  },
  "files": [
    "HISTORY.md",
    "LICENSE",
    "index.js"
  ],
  "gitHead": "ef932231c20e716ec27ea159c082322c3c485b66",
  "homepage": "https://github.com/jshttp/mime-types#readme",
  "keywords": [
    "mime",
    "types"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "dougwilson",
      "email": "doug@somethingdoug.com"
    },
    {
      "name": "jongleberry",
      "email": "jonathanrichardong@gmail.com"
    }
  ],
  "name": "mime-types",
  "optionalDependencies": {},
  "readme": "# mime-types\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][ci-image]][ci-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nThe ultimate javascript content-type utility.\n\nSimilar to [the `mime@1.x` module](https://www.npmjs.com/package/mime), except:\n\n- __No fallbacks.__ Instead of naively returning the first available type,\n  `mime-types` simply returns `false`, so do\n  `var type = mime.lookup('unrecognized') || 'application/octet-stream'`.\n- No `new Mime()` business, so you could do `var lookup = require('mime-types').lookup`.\n- No `.define()` functionality\n- Bug fixes for `.lookup(path)`\n\nOtherwise, the API is compatible with `mime` 1.x.\n\n## Install\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install mime-types\n```\n\n## Adding Types\n\nAll mime types are based on [mime-db](https://www.npmjs.com/package/mime-db),\nso open a PR there if you'd like to add mime types.\n\n## API\n\n```js\nvar mime = require('mime-types')\n```\n\nAll functions return `false` if input is invalid or not found.\n\n### mime.lookup(path)\n\nLookup the content-type associated with a file.\n\n```js\nmime.lookup('json') // 'application/json'\nmime.lookup('.md') // 'text/markdown'\nmime.lookup('file.html') // 'text/html'\nmime.lookup('folder/file.js') // 'application/javascript'\nmime.lookup('folder/.htaccess') // false\n\nmime.lookup('cats') // false\n```\n\n### mime.contentType(type)\n\nCreate a full content-type header given a content-type or extension.\nWhen given an extension, `mime.lookup` is used to get the matching\ncontent-type, otherwise the given content-type is used. Then if the\ncontent-type does not already have a `charset` parameter, `mime.charset`\nis used to get the default charset and add to the returned content-type.\n\n```js\nmime.contentType('markdown') // 'text/x-markdown; charset=utf-8'\nmime.contentType('file.json') // 'application/json; charset=utf-8'\nmime.contentType('text/html') // 'text/html; charset=utf-8'\nmime.contentType('text/html; charset=iso-8859-1') // 'text/html; charset=iso-8859-1'\n\n// from a full path\nmime.contentType(path.extname('/path/to/file.json')) // 'application/json; charset=utf-8'\n```\n\n### mime.extension(type)\n\nGet the default extension for a content-type.\n\n```js\nmime.extension('application/octet-stream') // 'bin'\n```\n\n### mime.charset(type)\n\nLookup the implied default charset of a content-type.\n\n```js\nmime.charset('text/markdown') // 'UTF-8'\n```\n\n### var type = mime.types[extension]\n\nA map of content-types by extension.\n\n### [extensions...] = mime.extensions[type]\n\nA map of extensions by content-type.\n\n## License\n\n[MIT](LICENSE)\n\n[ci-image]: https://badgen.net/github/checks/jshttp/mime-types/master?label=ci\n[ci-url]: https://github.com/jshttp/mime-types/actions/workflows/ci.yml\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/mime-types/master\n[coveralls-url]: https://coveralls.io/r/jshttp/mime-types?branch=master\n[node-version-image]: https://badgen.net/npm/node/mime-types\n[node-version-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/mime-types\n[npm-url]: https://npmjs.org/package/mime-types\n[npm-version-image]: https://badgen.net/npm/v/mime-types\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jshttp/mime-types.git"
  },
  "scripts": {
    "lint": "eslint .",
    "test": "mocha --reporter spec test/test.js",
    "test-ci": "nyc --reporter=lcov --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test"
  },
  "version": "2.1.35"
}
