{
  "_args": [
    [
      {
        "raw": "@vue/server-renderer@3.3.7",
        "scope": "@vue",
        "escapedName": "@vue%2fserver-renderer",
        "name": "@vue/server-renderer",
        "rawSpec": "3.3.7",
        "spec": "3.3.7",
        "type": "version"
      },
      "E:\\workspace_laravel\\control-stock\\node_modules\\vue"
    ]
  ],
  "_from": "@vue/server-renderer@3.3.7",
  "_hasShrinkwrap": false,
  "_id": "@vue/server-renderer@3.3.7",
  "_integrity": "sha512-UlpKDInd1hIZiNuVVVvLgxpfnSouxKQOSE2bOfQpBuGwxRV/JqqTCyyjXUWiwtVMyeRaZhOYYqntxElk8FhBhw==",
  "_location": "/@vue/server-renderer",
  "_nodeVersion": "20.8.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/server-renderer_3.3.7_1698190542329_0.4074028246780361"
  },
  "_npmUser": {
    "name": "yyx990803",
    "email": "yyx990803@gmail.com"
  },
  "_npmVersion": "10.1.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@vue/server-renderer@3.3.7",
    "scope": "@vue",
    "escapedName": "@vue%2fserver-renderer",
    "name": "@vue/server-renderer",
    "rawSpec": "3.3.7",
    "spec": "3.3.7",
    "type": "version"
  },
  "_requiredBy": [
    "/vue"
  ],
  "_resolved": "https://registry.npmjs.org/@vue/server-renderer/-/server-renderer-3.3.7.tgz",
  "_shasum": "0cc3dc6ad39a54693e6e8f853caa3c7bb43b0364",
  "_shrinkwrap": null,
  "_spec": "@vue/server-renderer@3.3.7",
  "_where": "E:\\workspace_laravel\\control-stock\\node_modules\\vue",
  "author": {
    "name": "Evan You"
  },
  "bugs": {
    "url": "https://github.com/vuejs/core/issues"
  },
  "buildOptions": {
    "name": "VueServerRenderer",
    "formats": [
      "esm-bundler",
      "esm-browser",
      "cjs"
    ]
  },
  "dependencies": {
    "@vue/compiler-ssr": "3.3.7",
    "@vue/shared": "3.3.7"
  },
  "description": "@vue/server-renderer",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-UlpKDInd1hIZiNuVVVvLgxpfnSouxKQOSE2bOfQpBuGwxRV/JqqTCyyjXUWiwtVMyeRaZhOYYqntxElk8FhBhw==",
    "shasum": "0cc3dc6ad39a54693e6e8f853caa3c7bb43b0364",
    "tarball": "https://registry.npmjs.org/@vue/server-renderer/-/server-renderer-3.3.7.tgz",
    "fileCount": 10,
    "unpackedSize": 374774,
    "signatures": [
      {
        "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
        "sig": "MEUCICJ5sGxx0fFixjBppYLIM5ZACBr9iE3zdgw31OzY3EseAiEAhSdpc/Hr4Nnt5FHo1eFzcxks5zSFW/CGkefc09OpoAM="
      }
    ]
  },
  "files": [
    "index.js",
    "dist"
  ],
  "homepage": "https://github.com/vuejs/core/tree/main/packages/server-renderer#readme",
  "keywords": [
    "vue"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "yyx990803",
      "email": "yyx990803@gmail.com"
    }
  ],
  "module": "dist/server-renderer.esm-bundler.js",
  "name": "@vue/server-renderer",
  "optionalDependencies": {},
  "peerDependencies": {
    "vue": "3.3.7"
  },
  "readme": "# @vue/server-renderer\n\n**Note: as of 3.2.13+, this package is included as a dependency of the main `vue` package and can be accessed as `vue/server-renderer`. This means you no longer need to explicitly install this package and ensure its version match that of `vue`'s. Just use the `vue/server-renderer` deep import instead.**\n\n## Basic API\n\n### `renderToString`\n\n**Signature**\n\n```ts\nfunction renderToString(\n  input: App | VNode,\n  context?: SSRContext\n): Promise<string>\n```\n\n**Usage**\n\n```js\nconst { createSSRApp } = require('vue')\nconst { renderToString } = require('@vue/server-renderer')\n\nconst app = createSSRApp({\n  data: () => ({ msg: 'hello' }),\n  template: `<div>{{ msg }}</div>`\n})\n\n;(async () => {\n  const html = await renderToString(app)\n  console.log(html)\n})()\n```\n\n### Handling Teleports\n\nIf the rendered app contains teleports, the teleported content will not be part of the rendered string. Instead, they are exposed under the `teleports` property of the ssr context object:\n\n```js\nconst ctx = {}\nconst html = await renderToString(app, ctx)\n\nconsole.log(ctx.teleports) // { '#teleported': 'teleported content' }\n```\n\n## Streaming API\n\n### `renderToNodeStream`\n\nRenders input as a [Node.js Readable stream](https://nodejs.org/api/stream.html#stream_class_stream_readable).\n\n**Signature**\n\n```ts\nfunction renderToNodeStream(input: App | VNode, context?: SSRContext): Readable\n```\n\n**Usage**\n\n```js\n// inside a Node.js http handler\nrenderToNodeStream(app).pipe(res)\n```\n\n**Note:** This method is not supported in the ESM build of `@vue/server-renderer`, which is decoupled from Node.js environments. Use `pipeToNodeWritable` instead.\n\n### `pipeToNodeWritable`\n\nRender and pipe to an existing [Node.js Writable stream](https://nodejs.org/api/stream.html#stream_writable_streams) instance.\n\n**Signature**\n\n```ts\nfunction pipeToNodeWritable(\n  input: App | VNode,\n  context: SSRContext = {},\n  writable: Writable\n): void\n```\n\n**Usage**\n\n```js\n// inside a Node.js http handler\npipeToNodeWritable(app, {}, res)\n```\n\n### `renderToWebStream`\n\nRenders input as a [Web ReadableStream](https://developer.mozilla.org/en-US/docs/Web/API/Streams_API).\n\n**Signature**\n\n```ts\nfunction renderToWebStream(\n  input: App | VNode,\n  context?: SSRContext\n): ReadableStream\n```\n\n**Usage**\n\n```js\n// inside an environment with ReadableStream support\nreturn new Response(renderToWebStream(app))\n```\n\n**Note:** in environments that do not expose `ReadableStream` constructor in the global scope, `pipeToWebWritable` should be used instead.\n\n### `pipeToWebWritable`\n\nRender and pipe to an existing [Web WritableStream](https://developer.mozilla.org/en-US/docs/Web/API/WritableStream) instance.\n\n**Signature**\n\n```ts\nfunction pipeToWebWritable(\n  input: App | VNode,\n  context: SSRContext = {},\n  writable: WritableStream\n): void\n```\n\n**Usage**\n\nThis is typically used in combination with [`TransformStream`](https://developer.mozilla.org/en-US/docs/Web/API/TransformStream):\n\n```js\n// TransformStream is available in environments such as CloudFlare workers.\n// in Node.js, TransformStream needs to be explicitly imported from 'stream/web'\nconst { readable, writable } = new TransformStream()\npipeToWebWritable(app, {}, writable)\n\nreturn new Response(readable)\n```\n\n### `renderToSimpleStream`\n\nRenders input in streaming mode using a simple readable interface.\n\n**Signature**\n\n```ts\nfunction renderToSimpleStream(\n  input: App | VNode,\n  context: SSRContext,\n  options: SimpleReadable\n): SimpleReadable\n\ninterface SimpleReadable {\n  push(content: string | null): void\n  destroy(err: any): void\n}\n```\n\n**Usage**\n\n```js\nlet res = ''\n\nrenderToSimpleStream(\n  app,\n  {},\n  {\n    push(chunk) {\n      if (chunk === null) {\n        // done\n        console(`render complete: ${res}`)\n      } else {\n        res += chunk\n      }\n    },\n    destroy(err) {\n      // error encountered\n    }\n  }\n)\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vuejs/core.git",
    "directory": "packages/server-renderer"
  },
  "types": "dist/server-renderer.d.ts",
  "version": "3.3.7"
}
